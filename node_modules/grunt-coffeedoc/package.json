{
  "name": "grunt-coffeedoc",
  "description": "Grunt Plugin to execute CoffeeDoc documentation generation",
  "version": "0.1.0",
  "homepage": "https://github.com/scyros/grunt-coffeedoc",
  "author": {
    "name": "Carlos LeÃ³n",
    "email": "carlos.eduardo.leon.franco@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/scyros/grunt-coffeedoc.git"
  },
  "bugs": {
    "url": "https://github.com/scyros/grunt-coffeedoc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/scyros/grunt-coffeedoc/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-coffeedoc\n\n> Grunt Plugin to execute CoffeeDoc documentation generation\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-coffeedoc --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-coffeedoc');\n```\n\n## The \"coffeedoc\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `coffeedoc` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  coffeedoc: {\n    target: 'coffee sources directory',\n    options: {\n      // CoffeeDoc options\n    }\n  }\n});\n```\n\n### Options\n\n#### options.output\nType: `String`\nDefault value: `'docs'`\n\nSet output directory.\n\n#### options.ignore\nType: `String`\nDefault value: ``\n\nFiles or directories to ignore.\n\n#### options.stdout\nType: `String`\n\nIf present, directs all output to stdout instead of files.\n\n#### options.hide-private\nType: `String`\n\nIf present, do not document methods beginning with an underscore.\n\n#### options.parser\nType: `String`\nDefault value: `commonjs`\n\nParser to use. Built-in parsers: commonjs, requirejs.\n\n#### options.renderer\nType: `String`\nDefault value: `html`\n\nRenderer to use. Built-in renderers: html, gfm, json.\n\n#### options.indexTemplate\nType: `String`\n\nOverride the default index template for the selected renderer.\n\n#### options.moduleTemplate\nType: `String`\n\nOverride the default module template for the selected renderer.\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  coffeedoc: {\n    target: 'src',\n    options: {\n      output: 'doc',\n      parser: 'requirejs',\n      renderer: 'html'\n    }\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-coffeedoc@0.1.0",
  "_shasum": "271316bdf9524c7849fa5b9ef3aab5ec4a2336ca",
  "_from": "grunt-coffeedoc@",
  "_resolved": "https://registry.npmjs.org/grunt-coffeedoc/-/grunt-coffeedoc-0.1.0.tgz"
}
