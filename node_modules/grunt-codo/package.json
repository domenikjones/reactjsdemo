{
  "name": "grunt-codo",
  "description": "Grunt task for generating Codo documentation",
  "version": "0.1.0",
  "homepage": "https://github.com/Stoney-FD/grunt-codo",
  "author": {
    "name": "Johannes Stein",
    "email": "johannesstein@freeze-dev.com",
    "url": "http://freeze-dev.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Stoney-FD/grunt-codo.git"
  },
  "bugs": {
    "url": "https://github.com/Stoney-FD/grunt-codo/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/Stoney-FD/grunt-codo/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "grunt-contrib-coffee": "~0.7.0",
    "matchdep": "~0.3.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "coffeescript",
    "codo",
    "doc",
    "documentation"
  ],
  "dependencies": {
    "codo": "~2.0.0",
    "coffee-script": "~1.6.3",
    "cli-table": "~0.2.0"
  },
  "readme": "# grunt-codo\r\n\r\n> Grunt task for generating Codo documentation\r\n\r\nCodo is documentation generator for CoffeeScript, see https://github.com/netzpirat/codo for more information.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-codo --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-codo');\r\n```\r\n\r\n## The \"codo\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `codo` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  codo: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.inputs\r\nType: `Array`\r\nDefault value: `['src']`\r\n\r\nAn array with the source elements to be processed through Codo.\r\n\r\n#### options.output\r\nType: `String`\r\nDefault value: `'doc'`\r\n\r\nWhere the documentation will be written.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nIn this example, the default options are used to do something with whatever. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result would be `Testing, 1 2 3.`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  codo: {\r\n    options: {\r\n       //codo options\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### Custom Options\r\nIn this example, custom options are used to do something else with whatever else. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result in this case would be `Testing: 1 2 3 !!!`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  codo: {\r\n    options: {\r\n      title: \"My library\",\r\n      output: 'output/doc',\r\n      inputs: [\"src/dir1\", \"src/dir2\", \"src/dir3\"]\r\n    }\r\n  },\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-codo@0.1.0",
  "_shasum": "f2d22d0bb766b7abb83610ceb7d843c547fdff5f",
  "_from": "grunt-codo@^0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-codo/-/grunt-codo-0.1.0.tgz"
}
